# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {
  timelineCursorEvents(
    accountId: Int
    timelineId: Int!
    limit: Limit
    cursor: String
  ): TimelineEvents!
  myAccountTimelines(accountId: Int!): [ShortTimeline!]!
  timeline(timelineId: Int!): Timeline
  event(eventId: Int!, accountId: Int): TimelineEvent
}

type Mutation {
  authorize: User

  addTimeline(timeline: AddTimeline): Timeline!

  addEvent(event: TimelineEventInput!): TimelineEvent!
  editEvent(event: ExistTimelineEventInput!): TimelineEvent!
  deleteEvent(eventId: Int!): Status!

  addAccount(name: String!): ShortAccount!
  saveAccount(accountId: Int!, account: SaveAccountInput!): ShortAccount!
  saveSettings(accountId: Int!, settings: [AccountSettingInput]): Status!
}

type Timeline {
  id: Int!
  name: String
  accountId: Int!
  account: ShortAccount!
}

type ShortTimeline {
  id: Int!
  name: String
}

type ShortAccount {
  id: Int!
  name: String
  previewlyToken: String!
  avatarId: Int
  about: String
  settings: [AccountSettings!]!
}

type AccountSettings {
  key: String!
  value: String!
}

type User {
  id: Int!
  name: String
  email: String!
  isNew: Boolean!
  accounts: [ShortAccount]!
}

type TimelineEvent {
  id: Int!
  date: Time!
  type: TimelineType!
  title: String
  timelineId: Int!
  timeline: Timeline!
  description: String
  showTime: Boolean
  url: String
  tags: [String!]!
  previewlyImageId: Int
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean!
}

type TimelineEvents {
  events: [TimelineEvent!]!
  page: PageInfo!
}

input AddTimeline {
  name: String
  accountId: Int!
}

input TimelineEventInput {
  id: Int
  timelineId: Int!
  date: Time!
  type: TimelineType
  title: String
  description: String
  showTime: Boolean
  url: String
  tags: [String!]
  previewlyImageId: Int
}

input ExistTimelineEventInput {
  id: Int!
  timelineId: Int!
  date: Time!
  type: TimelineType
  title: String
  description: String
  showTime: Boolean
  url: String
  tags: [String!]
  previewlyImageId: Int
}

input Limit {
  from: Int
  to: Int
}

input AccountSettingInput {
  key: String!
  value: String
}

input SaveAccountInput {
  name: String!
  about: String
  avatarID: Int
}

enum TimelineType {
  default
  selebrate
}

enum Status {
  success
  error
}

scalar Time
