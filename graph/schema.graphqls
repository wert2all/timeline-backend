# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {
  timelineEvents(timelineId: Int!, limit: Limit): [TimelineEvent!]!
}

type Mutation {
  authorize: User

  addTimeline(timeline: AddTimeline): ShortUserTimeline!

  addEvent(event: TimelineEventInput!): TimelineEvent!
  editEvent(event: ExistTimelineEventInput!): TimelineEvent!
  deleteEvent(eventId: Int!): Status!
}

type ShortUserTimeline {
  id: Int!
  name: String
}

type ShortAccount {
  id: Int!
  name: String
  avatar: String
  # timelines: [ShortTimeline!]!
}

type User {
  id: Int!
  name: String
  email: String!
  avatar: String
  isNew: Boolean!
  accounts: [ShortAccount]!
}

type TimelineEvent {
  id: Int!
  date: Time!
  type: TimelineType!
  title: String
  description: String
  showTime: Boolean
  url: String
  tags: [String!]!
}

input AddTimeline {
  name: String
  accountId: Int!
}

input TimelineEventInput {
  id: Int
  timelineId: Int!
  date: Time!
  type: TimelineType
  title: String
  description: String
  showTime: Boolean
  url: String
  tags: [String!]
}

input ExistTimelineEventInput {
  id: Int!
  timelineId: Int!
  date: Time!
  type: TimelineType
  title: String
  description: String
  showTime: Boolean
  url: String
  tags: [String!]
}

input Limit {
  from: Int
  to: Int
}

scalar Time
enum TimelineType {
  default
  selebrate
}

enum Status {
  success
  error
}
